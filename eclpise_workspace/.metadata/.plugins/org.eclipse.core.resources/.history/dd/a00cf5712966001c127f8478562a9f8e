package pers.chh3213.sort;

import java.util.Arrays;

public class MergeSort {
	public static void main(String[] args) {
		MergeSort Sort = new MergeSort();
		int[] arr = {9, -16, 310, 23, -30, -49, 25, 21, 30};
		Sort.mergeSort(arr,0,arr.length-1);
		System.out.println(Arrays.toString(arr));
	}
	public void mergeSort(int[] arr,int left, int right) {
		int mid = (left+right)/2;
		if(left<right) {
		mergeSort(arr, left, mid);
		mergeSort(arr, mid+1, right);
		
		}
	}
	public void merge(int[] arr, int left,int right, int mid) {
		int[] temp = new int[right-left+1];
		int i=left;
		int j = mid+1;
		int k =0;
		while(i<=mid && j<=right) {
			if(arr[i]<=arr[j]) {
				temp[k++]=arr[i++];
			}
			else {
				temp[k++]=arr[j++];
			}
		}
		while(i<=mid)temp[k++]=arr[i++];
		while(j<=right)temp[k++]=arr[j++];
		for (int k2 = 0; k2 < temp.length; k2++) {
			arr[k2+left]=temp[k2];
		}
	}
}
